---
- hosts: default
  vars:
    http_port: 80
    max_clients: 200
    locale: en_US.UTF-8
    timezone: Asia/Kolkata
    venv_path: /home/vagrant/envs/dubdubdub
    dbs_required:
      - spatial
      - klp-coord
      - electrep_new
      - dise_all
      - apmdm
      - klpdise_olap
      - ang_infra
      - libinfra
      - library
      - pratham_mysore
      - dubdubdub
  user: vagrant
  sudo: True

  tasks:
    - command: "date --date='2 day ago' +'%Y-%m-%d'"
      register: yesterday

    - name: ensure locale en_US.UTF-8 exists
      locale_gen: name={{ locale }} state=present

    - name: update locale
      command: /usr/sbin/update-locale LANG={{ locale }}

    - name: Set timezone variables
      copy: content={{ timezone }}\n
            dest=/etc/timezone
            owner=root
            group=root
            mode=0644
            backup=yes
      notify:
        - update timezone

    - name: adding postgres repo
      apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main' state=present

    - name: import postgresql repo key
      apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present

    - name: update apt cache
      command: "/usr/bin/aptitude update"

    - name: "upgrade apt packages"
      command: "/usr/bin/aptitude safe-upgrade -y"

    - name: install wget and ca-certificate
      apt: pkg={{ item }} state=latest
      with_items:
        - wget
        - ca-certificates

    - name: ensure postgresql 9.3 is installed
      apt: pkg=postgresql-9.3 state=latest

    - name: ensure postgresql is running
      service: name=postgresql state=started

    - name: install all required packages
      apt: pkg={{ item }} state=latest
      with_items:
        - postgresql-contrib-9.3
        - postgresql-server-dev-9.3
        - postgresql-9.3-postgis-2.1
        - python-setuptools
        - build-essential
        - python2.7-dev
        - libjpeg-dev
        - python-pip
        - python-psycopg2
        - vim

    - name: install virtualenv
      pip: name=virtualenv

    - name: create database
      sudo_user: postgres
      postgresql_db: name=dubdubdub
                     encoding='UTF-8'
                     lc_collate='en_US.UTF-8'
                     lc_ctype='en_US.UTF-8'
                     template='template0'

    - name: create postgresql user and give privileges
      sudo_user: postgres
      postgresql_user: db=dubdubdub name=klp password=klp priv=ALL role_attr_flags=CREATEDB,CREATEROLE,SUPERUSER,LOGIN

    - name: create pgpass in postgres user
      sudo_user: postgres
      copy: content=*:5432:*:klp:klp
            dest=/var/lib/postgresql/.pgpass
            owner=postgres
            group=postgres
            mode=0600

    - name: create pgpass in vagrant user
      sudo_user: vagrant
      copy: content=*:5432:*:klp:klp
            dest=/home/vagrant/.pgpass
            owner=vagrant
            group=vagrant
            mode=0600

    - name: dropping exiting databases
      sudo_user: postgres
      postgresql_db: name={{ item }}
                     state=absent
      with_items: dbs_required

    - name: creating required databases
      sudo_user: postgres
      postgresql_db: name={{ item }}
                     encoding='UTF-8'
                     lc_collate='en_US.UTF-8'
                     lc_ctype='en_US.UTF-8'
                     template='template0'
                     owner=klp
      with_items: dbs_required

    - name: downloading required databases
      sudo: False
      get_url: url=http://dev.klp.org.in/public/db_backups/{{ yesterday.stdout }}-daily/{{ item }}.custom dest=/home/vagrant/{{ item }}.custom
      with_items: dbs_required

    - name: restoring databases
      sudo: False
      command: pg_restore -h localhost -U klp -d {{ item }} -F c /home/vagrant/{{ item }}.custom
      with_items: dbs_required

    - name: dropping materialized views
      sudo_user: postgres
      command: psql -h localhost -d dubdubdub -U klp -f /vagrant/sql/drop_materialized_views.sql

    - name: creating materialized views
      sudo_user: postgres
      command: psql -h localhost -d dubdubdub -U klp -f /vagrant/sql/materialized_views.sql

    - name: install dependencies into virtualenv
      sudo: False
      pip: requirements=/vagrant/requirements.txt virtualenv={{ venv_path }} state=present

    - name: ensure virtualenv is active when user logs in
      lineinfile: dest=/home/vagrant/.bashrc line='cd /vagrant && source {{ venv_path }}/bin/activate' state=present

    - name: create alias for runserver
      lineinfile: dest=/home/vagrant/.bashrc line='alias runserver="python manage.py runserver 0.0.0.0:8000"' state=present

    - name: copy local_settings.py from sample
      sudo: False
      command: cp /vagrant/dubdubdub/local_settings.py.sample /vagrant/dubdubdub/local_settings.py

  handlers:
    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata
